---
interface Props {
  colors?: string[];
}

const { colors = [] } = Astro.props as Props;
const palette = colors.filter(Boolean);
const colorAttr = palette.length >= 3 ? palette.slice(0, 3).join(',') : undefined;

const fallbackBlobs = [
  { tone: 'cyan', size: '64vmax', top: '-24%', left: '-12%', blur: '160px', opacity: 0.55, duration: '22s' },
  { tone: 'violet', size: '52vmax', top: '48%', left: '50%', blur: '140px', opacity: 0.45, duration: '26s' },
  { tone: 'magenta', size: '48vmax', top: '-12%', left: '58%', blur: '150px', opacity: 0.5, duration: '24s' }
];
---

<div
  class="kota-webgl absolute inset-0 pointer-events-none"
  data-kota-webgl
  data-colors={colorAttr}
>
  <canvas class="kota-webgl__canvas" aria-hidden="true"></canvas>
  <div class="kota-webgl__fallback" aria-hidden="true">
    {fallbackBlobs.map((blob) => (
      <span
        class={`kota-webgl__blob kota-webgl__blob--${blob.tone}`}
        style={`--size:${blob.size};--top:${blob.top};--left:${blob.left};--blur:${blob.blur};--opacity:${blob.opacity};--duration:${blob.duration};`}
        aria-hidden="true"
      ></span>
    ))}
  </div>
</div>

<style>
  .kota-webgl {
    display: block;
    isolation: isolate;
    z-index: 0;
  }

  .kota-webgl__canvas {
    width: 100%;
    height: 100%;
    display: block;
  }

  .kota-webgl__fallback {
    position: absolute;
    inset: 0;
    pointer-events: none;
    overflow: hidden;
    transition: opacity 0.8s ease, transform 1s ease;
    mix-blend-mode: screen;
  }

  .kota-webgl.is-ready .kota-webgl__fallback,
  .kota-webgl__fallback[data-hidden="true"] {
    opacity: 0;
    transform: scale(1.05);
  }

  .kota-webgl__fallback::after {
    content: '';
    position: absolute;
    inset: 0;
    background: radial-gradient(circle at 20% 20%, rgba(255,255,255,0.05) 0%, transparent 55%),
                radial-gradient(circle at 80% 70%, rgba(255,255,255,0.04) 0%, transparent 50%);
    mix-blend-mode: overlay;
    opacity: 0.8;
    animation: kota-fallback-grain 11s linear infinite;
  }

  .kota-webgl__blob {
    position: absolute;
    width: var(--size);
    height: var(--size);
    top: var(--top);
    left: var(--left);
    opacity: var(--opacity);
    border-radius: 50%;
    filter: blur(var(--blur)) saturate(125%);
    transform-origin: center;
    animation: kota-blob-sway var(--duration) ease-in-out infinite;
  }

  .kota-webgl__blob--cyan {
    background: radial-gradient(circle, rgba(64, 255, 230, 0.9) 0%, rgba(64, 255, 230, 0.35) 55%, transparent 100%);
  }

  .kota-webgl__blob--magenta {
    background: radial-gradient(circle, rgba(255, 110, 255, 0.85) 0%, rgba(255, 110, 255, 0.3) 55%, transparent 100%);
  }

  .kota-webgl__blob--violet {
    background: radial-gradient(circle, rgba(124, 65, 243, 0.85) 0%, rgba(124, 65, 243, 0.28) 55%, transparent 100%);
  }

  @keyframes kota-blob-sway {
    0% {
      transform: translate3d(0, 0, 0) scale(1);
    }
    33% {
      transform: translate3d(3%, -6%, 0) scale(1.05) rotate(8deg);
    }
    66% {
      transform: translate3d(-4%, -4%, 0) scale(1.08) rotate(-6deg);
    }
    100% {
      transform: translate3d(0, 0, 0) scale(1) rotate(0deg);
    }
  }

  @keyframes kota-fallback-grain {
    0% { transform: translate3d(0, 0, 0); }
    50% { transform: translate3d(-1.5%, -1.2%, 0); }
    100% { transform: translate3d(0, 0, 0); }
  }
</style>

<script type="module">
  import('/src/scripts/kota-webgl.ts')
    .then(() => console.info('[kota-webgl] script imported from component'))
    .catch((error) => console.error('[kota-webgl] import failed', error));
</script>
